/TODO: if post Brexit?
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | CMR
  td.govuk-table__cell
    = render "none_or_bullet_list", entities_list: component.cmrs

tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Nanomaterials
  td.govuk-table__cell

    = render "none_or_bullet_list", entities_list: component.nano_material&.nano_elements
- if component.nano_material&.nano_elements.present?
  tr.govuk-table__row
    th.govuk-table__header[scope="row"]
      | Application instruction
    td.govuk-table__cell
      = component.nano_material&.exposure_route
  tr.govuk-table__row
    th.govuk-table__header[scope="row"]
      | Exposure condition
    td.govuk-table__cell
      = component.nano_material&.exposure_condition

tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Category of product
  td.govuk-table__cell
    = get_category_name(component.root_category)
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    = "Category of #{get_category_name(component.root_category).downcase}"
  td.govuk-table__cell
    = get_category_name(component.sub_category)
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    = "Category of #{get_category_name(component.sub_category).downcase}"
  td.govuk-table__cell
    = get_category_name(component.sub_sub_category)

tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Formulation given as
  td.govuk-table__cell
    = get_notification_type_name(component.notification_type)
tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Frame formulation
  td.govuk-table__cell
    = get_frame_formulation_name(component.frame_formulation)

tr.govuk-table__row
  th.govuk-table__header[scope="row"]
    | Formulation
  td.govuk-table__cell
    - if component.exact? && component.exact_formulas
      = render "none_or_bullet_list", entities_list: component.exact_formulas,
              key_name: :inci_name, value_name: :quantity
    - elsif component.range? && component.range_formulas
      = render "none_or_bullet_list", entities_list: format_range_formulas(component.range_formulas),
              key_name: :inci_name, value_name: :range
    - elsif component.formulation_file.filename
      = component.formulation_file.filename
    - else
      = link_to "Add formulation document",
        new_responsible_person_notification_component_formulation_path(@notification.responsible_person, @notification, component)
- if component.trigger_questions
  - component.trigger_questions.each do |question|
    - if trigger_question_answer_is_present?(question)
      = render "notifications/trigger_question_details", trigger_question: question
