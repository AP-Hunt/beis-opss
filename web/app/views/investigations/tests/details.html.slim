- page_title = "Record #{@test.pretty_name}"
- content_for :page_title, page_title
- content_for :after_header do
  = link_to "Back to case", investigation_path(@investigation), class: "govuk-back-link"
h1.govuk-heading-xl
  span.govuk-caption-xl
    | Case: #{@investigation.pretty_id}
  = page_title
.govuk-grid-row
  .govuk-grid-column-two-thirds
    = form_with model: @test, scope: :test, local: true, url: wizard_path, method: :put do |form|
      = render "form_validation_display", errors: @test.errors, model_name: @test.pretty_name
      = form.hidden_field :is_result, value: !@test.requested?
      fieldset.govuk-fieldset
        legend.govuk-fieldset__legend.govuk-fieldset__legend--l
          - if @test.requested?
            | Which product should be tested?
          - else
            | Which product was tested?
        - if @investigation.products.empty?
          span.govuk-hint
            ' There are no products on this case.
            = link_to "Add a product", new_investigation_product_path(@investigation)
            |  to send it for testing.
        - else
          .govuk-form-group class=("govuk-form-group--error" if @test.errors[:product].any?)
            span.govuk-hint
              ' Only products already added to the case are listed.
              = link_to "Add a product", new_investigation_product_path(@investigation)
            = form.collection_select :product_id, @investigation.products, :id, :name, { include_blank: true },
                    class: "govuk-select", id: "product-picker"

        legend.govuk-fieldset__legend.govuk-fieldset__legend--l
          | Against which legislation?
        .govuk-form-group class=("govuk-form-group--error" if @test.errors[:legislation].any?)
          span.govuk-hint
            | Select the relevant legislation from the list.
          = form.select :legislation, legislation_constants["legislation"], { include_blank: true },
                  class: "govuk-select", id: "legislation-picker"

        legend.govuk-fieldset__legend.govuk-fieldset__legend--l
          - if @test.requested?
            | When did you request testing?
          - else
            | When was the test conducted?
        .govuk-form-group class=("govuk-form-group--error" if @test.errors[:date].any?)
          = render "date_input", form: form

      - if !@test.requested?
        fieldset.govuk-fieldset
          legend.govuk-fieldset__legend.govuk-fieldset__legend--l
            | What was the test result?
          .govuk-form-group class=("govuk-form-group--error" if @test.errors[:result].any?)
            .govuk-radios
              - Test::Result.results.each do |(result, label)|
                .govuk-radios__item
                  = form.radio_button :result, result, class: "govuk-radios__input"
                  = form.label :result, label, class: "govuk-label govuk-radios__label"

      fieldset.govuk-fieldset
        legend.govuk-fieldset__legend.govuk-fieldset__legend--l
          | Further details
        .govuk-form-group
          = form.text_area :details, class: "govuk-textarea", rows: 5

      = render "related_attachment_fields", form: form, file: @file, attachment_category: :file

      .govuk-form-group
        = form.submit "Continue", class: "govuk-button"
