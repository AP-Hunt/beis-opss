= form.hidden_field :is_result, value: !test.requested?
fieldset.govuk-fieldset
  - if allow_product_linking
    legend.govuk-fieldset__legend.govuk-fieldset__legend--l
      - if test.requested?
        | Which product should be tested?
      - else
        | Which product was tested?
    .govuk-form-group.full-width class=("govuk-form-group--error" if test.errors[:product].any?)
      - if investigation.products.empty?
        span.govuk-hint
          ' There are no products on this case.
          = link_to "Add a product", new_investigation_product_path(investigation)
          |  to send it for testing.
      - elsif @investigation.products.size == 1
        = render "form_components/govuk_input", key: :product_name, form: form, attributes: { disabled: true },
                classes: "govuk-!-width-two-thirds", value: @investigation.products.first.name,
                label: { text: "Product name", classes: "govuk-visually-hidden" }
        = form.hidden_field :product_id, value: @investigation.products.first.id
      - else
        - span_html = capture do
          ' Only products already added to the case are listed.
          = link_to "Add a product", new_investigation_product_path(investigation)
        = render "form_components/autocomplete_select", key: :product_id, form: form, show_all_values: true,
                items: investigation.products.map { |product| [product.name, product.id] },
                span: { html: span_html }

  legend.govuk-fieldset__legend.govuk-fieldset__legend--l
    | Against which legislation?
  = render "form_components/autocomplete_select", items: relevant_legislation, key: :legislation, form: form,
          show_all_values: true, hint: { text: "Select the relevant legislation from the list." }

  legend.govuk-fieldset__legend.govuk-fieldset__legend--l
    - if test.requested?
      | When did you request testing?
    - else
      | When was the test conducted?
  = render "date_input", form: form

- if !test.requested?
  = render "form_components/govuk_radios", form: form, key: :result,
          fieldset: { legend: { text: "What was the test result?", classes: "govuk-fieldset__legend--l" } },
          items: Test::Result.results.map { |result, label| { text: label, value: result } }
fieldset.govuk-fieldset
  legend.govuk-fieldset__legend.govuk-fieldset__legend--l
    | Further details
  = render "form_components/govuk_textarea", key: :details, form: form, attributes: { maxlength: 50000 },
          label: { text: "Test details", classes: "govuk-visually-hidden" }

= render "related_attachment_fields", form: form, file_blob: @file_blob, attachment_name: :file,
        title: "Related attachments"
