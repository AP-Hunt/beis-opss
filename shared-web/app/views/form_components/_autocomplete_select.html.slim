ruby:
  local_assigns[:name] ||= get_attribute_name(form, key)
  local_assigns[:id] ||= "picker-#{key}"
  local_assigns[:items] = items.map do |item|
    {
      value: item.is_a?(Array) ? item[1] : item,
      text: item.is_a?(Array) ? item[0] : item
    }
  end
  local_assigns[:items].unshift(value: nil, text: "")

  selected_value = local_assigns[:selected]
  selected_value ||= form.object.send(key) if form.object.respond_to?(key)
  if selected_value
    item_matching_selected = local_assigns[:items].find { |item| item[:value].to_s == selected_value }
    item_matching_selected[:selected] = true if item_matching_selected
  elsif form.object&.respond_to?(key)
    # Make item selected based on attribute value
    item_matching_state = local_assigns[:items].find { |item| item[:value].to_s == form.object.send(key).to_s }
    item_matching_state[:selected] = true if item_matching_state
  end

  if form.object&.errors
    error_text = form.object.errors.full_messages_for(key).first.presence
    local_assigns[:errorMessage] ||= { text: error_text } if error_text
  end

= render "components/autocomplete_select", **local_assigns
