ruby:
  id = local_assigns[:id] || "picker-#{key}"
  show_all_values = local_assigns[:show_all_values]
  if form.object&.errors
     error_text = form.object.errors.full_messages_for(key).first.presence
     local_assigns[:errorMessage] ||= { text: error_text } if error_text
  end
  form_group_classes = [local_assigns.dig(:formGroup, :classes)]
  form_group_classes.push "govuk-form-group--error" if local_assigns[:errorMessage]
  selected_value = local_assigns[:selected]
  selected_value ||= form.object.send(key) if form.object.respond_to?(key)

.govuk-form-group class=form_group_classes
  - if local_assigns[:label]
    = form.label key, local_assigns[:label][:html] || local_assigns[:label][:text],
            class: local_assigns[:label][:classes] || "govuk-label", for: local_assigns[:label][:for] || id
  - if local_assigns[:hint]
    span.govuk-hint class=local_assigns[:hint][:classes]
      = local_assigns[:hint][:html] || local_assigns[:hint][:text]
  - if local_assigns[:errorMessage].present?
    = render "components/govuk_error_message", **local_assigns[:errorMessage]
  div class=("autocomplete-select-with-clear" if show_all_values)
    = form.select key, items, { include_blank: true, selected: selected_value }, class: "govuk-select", id: id

  / The clear button is only needed when the select box is showing all values (and a dropdown arrow)
  / See https://github.com/alphagov/accessible-autocomplete/issues/240#issuecomment-455859918 for more info
  - if show_all_values
    button id="clear-#{id}" class="autocomplete__clear-button" type="button"
      span#delete-hint.govuk-hint.govuk-visually-hidden
        | Click this to clear currently selected value
      svg viewbox="0 0 40 40" class="autocomplete__clear-button"
        path class="autocomplete__clear-icon" d="M 10,10 L 30,30 M 30,10 L 10,30"
  javascript:
    window.callAutocompleteWhenReady("#{id}", { showAllValues: "#{show_all_values}" });
